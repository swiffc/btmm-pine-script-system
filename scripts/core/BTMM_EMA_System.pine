//@version=5

// =============================================================================
// BTMM EMA SYSTEM - STEVE MAURO METHODOLOGY
// =============================================================================
// Purpose: Complete EMA bias system with food names and perfect stack detection
// Method: Steve Mauro's BTMM EMA food naming system with institutional bias scoring
// Author: BTMM Development Team  
// Version: 2.0 - Enhanced from Master System
// Date: 2025-07-02
// =============================================================================

indicator("BTMM EMA System", "BTMM EMA", overlay=true, shorttitle="BTMM EMA Sys...",
         max_lines_count=50, max_labels_count=100)

// ============================================================================
// 🥪 BTMM EMA CONFIGURATION (STEVE MAURO FOOD NAMES)
// ============================================================================

// === BTMM EMA SETTINGS (Steve Mauro Method) ===
ema_group = "🥪 BTMM EMA Configuration (Steve Mauro)"
ema_5_length = input.int(5, "5 EMA (Mustard) - Signal Line", minval=1, maxval=20, group=ema_group, tooltip="Fast signal line for momentum")
ema_13_length = input.int(13, "13 EMA (Ketchup) - Confirmation Line", minval=1, maxval=50, group=ema_group, tooltip="Critical confirmation line - must break for valid signals")
ema_50_length = input.int(50, "50 EMA (Water) - Intraday Trend", minval=1, maxval=100, group=ema_group, tooltip="1HR timeframe trend line")
ema_200_length = input.int(200, "200 EMA (Mayo) - Long Term Trend", minval=1, maxval=500, group=ema_group, tooltip="4HR timeframe trend line")
ema_800_length = input.int(800, "800 EMA (Blueberry Pie)", minval=1, maxval=1000, group=ema_group, tooltip="Higher timeframe reference")
show_emas = input.bool(true, "Show EMA Lines", group=ema_group)
show_ema_labels = input.bool(true, "Show EMA Food Labels", group=ema_group)

// === BTMM BIAS SETTINGS (15M+ Only) ===
bias_group = "🎯 BTMM Bias Analysis (15M+ Timeframes)"
auto_bias = input.bool(true, "Auto BTMM Bias Detection", group=bias_group)
manual_bias = input.string("AUTO", "Manual Bias Override", options=["AUTO", "BULLISH", "BEARISH", "NEUTRAL"], group=bias_group)
enable_15m_bias_only = input.bool(true, "Enforce 15M+ Bias Rule (Steve Mauro)", group=bias_group)
show_bias_warning = input.bool(true, "Show Lower TF Warning", group=bias_group)
btmm_bias_score_threshold = input.float(2.0, "BTMM Bias Score Threshold", minval=1.0, maxval=5.0, step=0.5, group=bias_group, tooltip="Score needed for strong bias (±2.0 recommended)")

// === VISUAL SETTINGS ===
visual_group = "🎨 Visual Configuration"
line_width = input.int(2, "Line Width", minval=1, maxval=5, group=visual_group)
label_size = input.string("normal", "Label Size", options=["tiny", "small", "normal", "large", "huge"], group=visual_group)

// ============================================================================
// 🥪 BTMM EMA CALCULATIONS (STEVE MAURO FOOD NAMES)
// ============================================================================

ema_5 = ta.ema(close, ema_5_length)      // Mustard (Signal Line)
ema_13 = ta.ema(close, ema_13_length)    // Ketchup (Confirmation Line) - CRITICAL
ema_50 = ta.ema(close, ema_50_length)    // Water (Intraday Trend)
ema_200 = ta.ema(close, ema_200_length)  // Mayo (Long Term Trend)
ema_800 = ta.ema(close, ema_800_length)  // Blueberry Pie (HTF Reference)

// BTMM Color Scheme (Steve Mauro Standard)
ema_5_color = close > ema_5 ? color.new(color.yellow, 0) : color.new(color.orange, 0)
ema_13_color = close > ema_13 ? color.new(color.red, 0) : color.new(color.maroon, 0)
ema_50_color = close > ema_50 ? color.new(color.aqua, 0) : color.new(color.blue, 0)
ema_200_color = close > ema_200 ? color.new(color.lime, 0) : color.new(color.gray, 0)
ema_800_color = close > ema_800 ? color.new(color.purple, 0) : color.new(color.navy, 0)

// Plot EMAs with BTMM styling
plot(show_emas ? ema_5 : na, "5 EMA (Mustard)", color=ema_5_color, linewidth=1)
plot(show_emas ? ema_13 : na, "13 EMA (Ketchup)", color=ema_13_color, linewidth=line_width)
plot(show_emas ? ema_50 : na, "50 EMA (Water)", color=ema_50_color, linewidth=line_width)
plot(show_emas ? ema_200 : na, "200 EMA (Mayo)", color=ema_200_color, linewidth=line_width + 1)
plot(show_emas ? ema_800 : na, "800 EMA (Blueberry)", color=ema_800_color, linewidth=line_width + 1)

// EMA Food Labels
label_text_size = switch label_size
    "tiny" => size.tiny
    "small" => size.small
    "normal" => size.normal
    "large" => size.large
    "huge" => size.huge
    => size.normal

if show_ema_labels and barstate.islast
    label.new(bar_index + 2, ema_5, "🟡 Mustard", style=label.style_label_left, color=color.yellow, textcolor=color.black, size=label_text_size)
    label.new(bar_index + 2, ema_13, "🔴 Ketchup", style=label.style_label_left, color=color.red, textcolor=color.white, size=label_text_size)
    label.new(bar_index + 2, ema_50, "💧 Water", style=label.style_label_left, color=color.aqua, textcolor=color.black, size=label_text_size)
    label.new(bar_index + 2, ema_200, "🟢 Mayo", style=label.style_label_left, color=color.lime, textcolor=color.black, size=label_text_size)
    label.new(bar_index + 2, ema_800, "🫐 Blueberry", style=label.style_label_left, color=color.purple, textcolor=color.white, size=label_text_size)

// ============================================================================
// 🎯 BTMM BIAS CALCULATION SYSTEM (15M+ TIMEFRAMES ONLY)
// ============================================================================

// Check if current timeframe is 15M or higher
is_15m_or_higher = timeframe.in_seconds() >= 900

// BTMM Bias Scoring Algorithm (Steve Mauro Verified Method)
calculate_btmm_bias_score() =>
    // Price position relative to each EMA (5 EMAs = 5 points max)
    score_5 = close > ema_5 ? 1.0 : -1.0
    score_13 = close > ema_13 ? 1.0 : -1.0
    score_50 = close > ema_50 ? 1.0 : -1.0
    score_200 = close > ema_200 ? 1.0 : -1.0
    score_800 = close > ema_800 ? 1.0 : -1.0
    
    // EMA Alignment Scoring (Perfect Stack Bonus)
    bullish_alignment = ema_5 > ema_13 and ema_13 > ema_50 and ema_50 > ema_200 and ema_200 > ema_800
    bearish_alignment = ema_5 < ema_13 and ema_13 < ema_50 and ema_50 < ema_200 and ema_200 < ema_800
    alignment_bonus = bullish_alignment ? 2.0 : bearish_alignment ? -2.0 : 0.0
    
    // 50/200 Relationship (Critical BTMM Rule)
    trend_score = ema_50 > ema_200 ? 1.0 : ema_50 < ema_200 ? -1.0 : 0.0
    
    // Total BTMM Bias Score (-8 to +8 range)
    total_score = score_5 + score_13 + score_50 + score_200 + score_800 + alignment_bonus + trend_score
    total_score

// Determine Market Bias
determine_btmm_market_bias() =>
    var string current_bias = "NEUTRAL"
    
    if not is_15m_or_higher and enable_15m_bias_only
        current_bias := "LOWER_TF_WARNING"
    else
        bias_score = calculate_btmm_bias_score()
        
        if bias_score >= btmm_bias_score_threshold
            current_bias := "BULLISH"
        else if bias_score <= -btmm_bias_score_threshold
            current_bias := "BEARISH"
        else
            current_bias := "NEUTRAL"
    
    if manual_bias != "AUTO"
        current_bias := manual_bias
    
    current_bias

// Get current bias
btmm_market_bias = determine_btmm_market_bias()
btmm_bias_score = calculate_btmm_bias_score()

// Perfect Stack Detection
btmm_perfect_bull_stack = ema_5 > ema_13 and ema_13 > ema_50 and ema_50 > ema_200 and ema_200 > ema_800
btmm_perfect_bear_stack = ema_5 < ema_13 and ema_13 < ema_50 and ema_50 < ema_200 and ema_200 < ema_800
btmm_perfect_stack = btmm_perfect_bull_stack or btmm_perfect_bear_stack

// Trend Relationships
btmm_trend_bullish = ema_50 > ema_200
btmm_trend_bearish = ema_50 < ema_200

// EMA Strength Analysis
ema_separation = math.abs((ema_5 - ema_800) / ema_800) * 100
ema_stack_strength = btmm_perfect_stack ? math.min(ema_separation * 10, 100) : 0

// ============================================================================
// 🎓 ENHANCED BIAS DISPLAY & EDUCATION
// ============================================================================

// Enhanced bias display
if barstate.islast and auto_bias
    // Timeframe warning
    timeframe_warning = not is_15m_or_higher and enable_15m_bias_only ? 
                       "\n⚠️ USE 15M+ FOR BIAS\nCurrent: " + timeframe.period : ""
    
    // BTMM EMA status
    ema_status = "🥪 BTMM EMAs:\n" + 
                (close > ema_5 ? "🟡 Mustard ✅ " : "🟡 Mustard ❌ ") +
                (close > ema_13 ? "🔴 Ketchup ✅ " : "🔴 Ketchup ❌ ") +
                (close > ema_50 ? "💧 Water ✅\n" : "💧 Water ❌\n") +
                (close > ema_200 ? "🟢 Mayo ✅ " : "🟢 Mayo ❌ ") +
                (close > ema_800 ? "🫐 Blueberry ✅" : "🫐 Blueberry ❌")
    
    // Additional information
    bias_score_text = "\n📊 Bias Score: " + str.tostring(btmm_bias_score, "#.#")
    stack_status = btmm_perfect_stack ? "\n🔥 PERFECT BTMM STACK" : ""
    trend_relationship = "\n📈 50/200: " + (btmm_trend_bullish ? "BULLISH" : btmm_trend_bearish ? "BEARISH" : "NEUTRAL")
    strength_text = "\n💪 Strength: " + str.tostring(ema_stack_strength, "#") + "%"
    
    bias_label = label.new(
        bar_index + 5, 
        high + ta.atr(14) * 3.0, 
        (btmm_market_bias == "LOWER_TF_WARNING" ? "⚠️ LOWER TIMEFRAME" : btmm_market_bias + " BIAS") + "\n" + 
        (btmm_market_bias == "BULLISH" ? "✅ W Patterns Only" : 
         btmm_market_bias == "BEARISH" ? "✅ M Patterns Only" : 
         btmm_market_bias == "LOWER_TF_WARNING" ? "Switch to 15M+" : "❌ No Patterns") + 
        timeframe_warning + "\n" +
        ema_status + bias_score_text + stack_status + trend_relationship + strength_text,
        style=label.style_label_down,
        color=switch btmm_market_bias
            "BULLISH" => color.green
            "BEARISH" => color.red
            "LOWER_TF_WARNING" => color.orange
            => color.gray,
        textcolor=color.white,
        size=size.normal
    )

// Lower timeframe warning
if show_bias_warning and not is_15m_or_higher and enable_15m_bias_only
    label.new(bar_index, high + ta.atr(14) * 5.0,
             "⚠️ BTMM BIAS CALCULATION\nRequires 15M+ Timeframe\nCurrent: " + timeframe.period + 
             "\n(Steve Mauro Verified Rule)",
             style=label.style_label_down, color=color.orange, textcolor=color.white, size=size.large)

// ============================================================================
// 📊 DATA WINDOW OUTPUTS (FOR INTEGRATION)
// ============================================================================

plot(btmm_bias_score, "BTMM_Bias_Score", display=display.data_window)
plot(btmm_perfect_bull_stack ? 1 : 0, "Bull_Stack", display=display.data_window)
plot(btmm_perfect_bear_stack ? 1 : 0, "Bear_Stack", display=display.data_window) 
plot(ema_stack_strength, "Stack_Strength", display=display.data_window)
plot(btmm_trend_bullish ? 1 : btmm_trend_bearish ? -1 : 0, "Trend_Direction", display=display.data_window)
plot(close > ema_13 ? 1 : 0, "Above_Ketchup", display=display.data_window)
plot(ema_5, "EMA_5_Mustard", display=display.data_window)
plot(ema_13, "EMA_13_Ketchup", display=display.data_window)
plot(ema_50, "EMA_50_Water", display=display.data_window)
plot(ema_200, "EMA_200_Mayo", display=display.data_window)
plot(ema_800, "EMA_800_Blueberry", display=display.data_window)

// System status
plot(is_15m_or_higher ? 1 : 0, "Valid_Timeframe", display=display.data_window)